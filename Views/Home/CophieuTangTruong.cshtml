@using WebForm.Common;
@using System.Data;
@using System.Diagnostics;
@using Microsoft.AspNetCore.Mvc;
@using WebForm.Helpers;
@using WebForm.Models;

@{

    Layout = "~/Views/Shared/_Layout.cshtml";


}
<style>
    table {
        border-collapse: collapse;
        width: 100%;
        text-align: center;
        table-layout: fixed;
    }

    col {
        width: 10%;
    }

    th, td {
        border: 1px solid #999;
        padding: 6px 8px;
        vertical-align: middle;
        word-wrap: break-word;
    }

    .headerth {
        background-color: #6cd392 !important;
    }

    .sub-header {
        background-color: #6cd392;
    }

    .zebra:nth-child(even) {
        background-color: #f9f9f9;
    }

    .zebra:nth-child(odd) {
        background-color: #ffffff;
    }

    tr th {
        font-family: Lexenddeca_light
    }

    .section-header {
        background-color: #b7f1cb;
        color: #16315e;
        font-family: Lexenddeca_B;
    }

    .column-header {
        background-color: #d58a35;
        font-family: Lexenddeca_light;
        color: #f9f9f9;
    }

    td{
        font-size: 15px;
    }
</style>

<div class="area-page-title">
    <div class="container">
        <h1 class="animate a_01">Cổ phiếu tăng trưởng</h1>
        <ol class="breadcrumb animate a_02">
            <li class="breadcrumb-item">
                <a href="/">Trang chủ</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Cổ phiếu tăng trưởng</li>
        </ol>
    </div>
</div>

<section id="service-details" class="service-details section">

    <div class="container">

        <div class="row gy-4">


            <div class="col-12">

                <div id="app">
                    <div class="table-responsive shadow-sm">
                        <table class=" table-bordered text-center align-middle cptd  table-striped table-hover">
                            
                            <thead class="text-white" >
                              
                                <tr>
                                    <th colspan="9" class="section-header">DANH MỤC TRUNG HẠN</th>
                                </tr>
                                <tr>
                                    <th rowspan="2" class="text-center align-middle  headerth" style="color:#5a6d82">Mã</th>
                                    <th rowspan="2" class="text-center align-middle  headerth" style="color:#5a6d82">Giá hiện tại <p>(1,000đ)</p></th>
                                    <th rowspan="2" class="text-center align-middle headerth" style="color:#5a6d82">Vùng mua <p>(1,000đ)</p></th>
                                    <th rowspan="2" class="text-center align-middle headerth" style="color:#5a6d82">Giá mục tiêu <p>(1,000đ)</p></th>
                                    <th rowspan="2" class="text-center align-middle  headerth" style="color:#5a6d82">Giá dừng lỗ <p>(1,000đ)</p></th>
                                    <th colspan="3" class="text-center align-middle  headerth" style="color:#5a6d82">Thông số cơ bản</th>
                                    <th rowspan="2" class="text-center align-middle  headerth" style="color:#5a6d82">Khuyến nghị</p></th>
                                </tr>
                                <tr >

                                    <th class="text-center align-middle headerth" style="color:#5a6d82">P/E (lần)</th>
                                    <th class="text-center align-middle headerth" style="color:#5a6d82">T.trưởng doanh thu</th>
                                    
                                    <th class="text-center align-middle  headerth" style="color:#5a6d82">T.trưởng lợi nhuận</th>
                                </tr>
                            </thead>
                            <tbody>


                                <tr v-for="(item, index) in stocks" :key="index">
                                    <td><a :href="`/chi-tiet-co-phieu/${item.Symbol}`" class="text-decoration-none fw-semibold" style="color:#67b0d1">{{ item.Symbol }}</a></td>
                                    <td class="text-end">{{ item.Current_Price_Text }} </td>
                                    <td class="">{{ item.PRICE_Exp_Text }} </td>
                                    <td class="">{{ item.PRICE_Taget_Text }} </td>
                                    <td class="text-end">{{ item.T_Pause }} </td>

                                    <td class="text-end">{{ item.PE }}</td>
                                    <td class="text-end">{{ item.DoanhThu }} </td>
                                    <td class="text-end">{{ item.LoiNhuan }} </td>
                                    <td class=""></td>
                                </tr>



                            </tbody>
                        </table>




                     
                    
                    </div>
                </div>





             


            </div>

          @*   <div class="col-lg-4" data-aos="fade-up" data-aos-delay="100">
                @Html.Partial("NewsOtherTab", "1")
            </div> *@

        </div>

    </div>

</section>
<script src="~/assets/js/vue.global.js"></script>

<script>
    const { createApp, ref, onMounted, computed } = Vue

    createApp({
      setup() {
        const stocks = ref([])

        const sendPost = () => {
          axios.get('/Home/GetStocks')
            .then(response => {
              console.log('Gửi thành công:', response.data)
              stocks.value = response.data
            })
            .catch(error => {
              console.error('Lỗi khi gọi API:', error)
            })
        }

        // ✅ Tạo computed lọc IsSpecial = 'Y'
        // const specialStocks = computed(() =>
        //   stocks.value.filter(item => (item.IsSpecial || '').toUpperCase() === 'Y')
        // )

       

        onMounted(() => {
          sendPost()
          setInterval(sendPost, 5000)
        })

        return {
          stocks
          // specialStocks // return ra template để dùng
        }
      }
    }).mount('#app')
</script>
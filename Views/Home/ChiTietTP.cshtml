@using WebForm.Common
@using Common
@using WebForm.Helpers
@model WebForm.Models.Symbol_Notify_Info

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Chi tiết cổ phiếu";

    string matp = "";
    if (ViewBag.MaTP != null)
    {
        matp = ViewBag.MaTP;
    }
    Symbol_Notify_Info _Info = new Symbol_Notify_Info();
    if (ViewBag.Info != null)
    {
        _Info = ViewBag.Info;
    }

    StockAnalysis stockAnalysis = null;
    if (ViewBag.StockAnalysis != null)
    {
        stockAnalysis = (StockAnalysis)ViewBag.StockAnalysis;
    }


    var host = Context.Request.IsHttps ? "https" : "http";
    host += "://" + Context.Request.Host.Value.ToLower();
    string _url = host + "/chart?symbol=" + matp + "& p_username =";
}

<script src="~/assets/js/vue.global.js"></script>


<div class="area-page-title">
    <div class="container">
        <h1 class="animate a_01">Thông tin cổ phiếu</h1>
        <ol class="breadcrumb animate a_02">
            <li class="breadcrumb-item">
                <a href="/">Trang chủ</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Thông tin cổ phiếu </li>
        </ol>
    </div>
</div>


<section id="service-details" class="service-details section">
    <div class="container" id="app">

        <!-- HÀNG 1: Thông tin + Biểu đồ -->
        <div class="row" id="app">
            <!-- Cột phải: Biểu đồ -->
            <div class="col-md-12">
                <div class="tinlienquan d-flex justify-content-between align-items-center" style="margin-bottom: 30px;">
                    <h3 class="fw-bold text-uppercase">Thông tin cổ phiếu</h3>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Mã cổ phiếu:</div>
                    <div class="col-sm-7">@(_Info.Symbol ?? "")</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Tên cổ phiếu:</div>
                    <div class="col-sm-7">@(_Info.Name ?? "")</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Tổ chức phát hành:</div>
                    <div class="col-sm-7">@(_Info.Issue ?? "")</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Giá mua:</div>
                    <div class="col-sm-7">@_Info.Price.ToNumberStringN31()</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Tỷ suất hiện tại:</div>
                    <div class="col-sm-7">{{ stocks.Heso_Text }}</div>
                </div>

                <div class="tinlienquan d-flex justify-content-between align-items-center" style="margin-bottom: 30px;">
                    <h3 class="fw-bold text-uppercase">Phân tích kỹ thuật</h3>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Giá hiện tại:</div>
                    <div class="col-sm-7">@(stockAnalysis.CurrentPrice.ToString("##0.##") ?? "")</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Thay đổi giá 20 ngày:</div>
                    <div class="col-sm-7">@(stockAnalysis.Change20Days.ToString("##0.##") ?? "")%</div>
                </div>
                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">RSI:</div>
                    <div class="col-sm-7">@(stockAnalysis.RSI.ToString("##0.##") + " -> " + stockAnalysis.RSISignal)</div>
                </div>
                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">MACD:</div>
                    <div class="col-sm-7">@(stockAnalysis.MACDCrossSignal)</div>
                </div>
                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Bollinger Bands:</div>
                    <div class="col-sm-7">@(stockAnalysis.BollingerSignal)</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Biến động giá:</div>
                    <div class="col-sm-7">@(stockAnalysis.Volatility.ToString("##0.##"))%</div>
                </div>

                <div class="row mb-2">
                    <div class="col-sm-5 fw-semibold text-muted">Thay đổi khối lượng 30 phiên:</div>
                    <div class="col-sm-7">@((stockAnalysis.VolumeChange * 100).ToString("##0.##")) %</div>
                </div>

                @if (stockAnalysis.Observations != null)
                {
                    <div class="row mb-2">
                        <div class="col-sm-5 fw-semibold text-muted">Nhận định:</div>
                        <div class="col-sm-7"></div>
                    </div>
                    @foreach (var obs in stockAnalysis.Observations)
                    {
                        <div class="row mb-2">
                            <div class="col-sm-12">@obs</div>
                        </div>
                    }
                }
            </div>
        </div>

        <div class="row">
            <div class="col-12 mb-3">
                <div class="tinlienquan d-flex justify-content-between align-items-center" style="margin-bottom: 30px;">
                    <h3 class="fw-bold text-uppercase">Đồ thị kỹ thuật</h3>
                </div>

                <iframe src="@_url"
                        width="100%"
                        height="600"
                        frameborder="0"
                        style="border:0; min-height:400px;"
                        allowfullscreen>
                </iframe>
            </div>
        </div>


        <!-- HÀNG 3: Dữ liệu báo cáo -->
       @*  <div class="row">
            <div class="col-12 mb-3">
                <div class="tinlienquan d-flex justify-content-between align-items-center" >
                    <h3 class="fw-bold text-uppercase">Báo cáo FinArt của cổ phiếu @matp</h3>
                </div>
                <div id="data_report">
                    @Html.Partial("DataReportPages_BySymbol")
                </div>
            </div>
        </div> *@

    </div>
</section>



<input type="hidden" id="txtRecordOnPage" value="@ConfigInfo.RecordOnPage" />
<script>
     $(document).ready(function() {
        page("1")
    });
    function page(index) {

        try {
            var recordOnPage = $('#txtRecordOnPage').val();
            var start = 1;
            var end = recordOnPage;

             if (index === 'next') {
               let pageht = $('li.active span.page-link').attr('id');
               index = (parseInt(pageht) || 0) + 1;
            } else if (index === 'prew') {
               let pageht = $('li.active span.page-link').attr('id');
               index = (parseInt(pageht) || 0) - 1;
            }

            if (index > 1) {
                end = index * recordOnPage;
                start = end - recordOnPage + 1;
            }
            var request = {
                 CategoryType: '6',
                 Symbol : '@matp.ToUpper()',
                currentPage: index,
                start: start,
                end: end
            };
            axios.post("/Home/SearchReport_Art_BySymbol", request).then(function (response) {
                $('#data_report').html(response.data);
            }).catch(error => {
                 console.log(error);
            });
        } catch (e) {
            console.log(e);
        }
    }
</script>





<script src="~/assets/js/vue.global.js"></script>

<script>
    const { createApp, ref, onMounted } = Vue

    createApp({
      setup() {
        const stocks = ref({})


        function sendPost() {

            axios.get('/tt-co-phieu/'+'@matp')
            .then(function (response) {
              console.log('Gửi thành công:', response.data)
              stocks.value = response.data
            })
            .catch(function (error) {
              console.error('Lỗi khi gọi API:', error)
            })
        }


       onMounted(() => {
            sendPost() // gọi lần đầu
            setInterval(sendPost, 5000) // gọi lại mỗi 60 giây
       })




        return { stocks }
      }
    }).mount('#app')
</script>
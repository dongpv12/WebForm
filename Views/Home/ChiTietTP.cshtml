@using WebForm.Common
@using Common
@using WebForm.Helpers
@model WebForm.Models.Symbol_Notify_Info

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Chi tiết cổ phiếu";

    string matp = "";
    if (ViewBag.MaTP != null)
    {
        matp = ViewBag.MaTP;
    }
    Symbol_Notify_Info _Info = new Symbol_Notify_Info();
    if (ViewBag.Info != null)
    {
        _Info = ViewBag.Info;
    }

    StockAnalysis stockAnalysis = null;
    if (ViewBag.StockAnalysis != null)
    {
        stockAnalysis = (StockAnalysis)ViewBag.StockAnalysis;
    }


    var host = Context.Request.IsHttps ? "https" : "http";
    host += "://" + Context.Request.Host.Value.ToLower();
    string _url = host + "/chart?symbol=" + matp + "& p_username =";
}
<style>
    .info-box {
        background-color: #e8f5e9; /* xanh lá nhạt */
        border: 1px solid #4caf50; /* viền xanh lá */
        border-radius: 8px;
    }

    .section-title {
        color: #2e7d32; /* xanh đậm hơn */
        border-bottom: 2px solid #4caf50;
        padding-bottom: 5px;
        margin-bottom: 15px;
    }
</style>
<script src="~/assets/js/vue.global.js"></script>
@if (ViewBag.Info == null)
{
    <div class="area-page-title">
        <div class="container">
            <h1 class="animate a_01">Thông tin cổ phiếu</h1>
            <ol class="breadcrumb animate a_02">
                <li class="breadcrumb-item">
                    <a href="/">Trang chủ</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Thông tin cổ phiếu </li>
            </ol>
        </div>
    </div>


    <section id="service-details" class="service-details section">
        <div class="container" id="app">

            <h3 class="fw-bold text-uppercase">Mã cổ phiếu không tồn tại trong hệ thống</h3>


        </div>
    </section>




}
else
{

    <div class="area-page-title">
        <div class="container">
            <h1 class="animate a_01">Thông tin cổ phiếu</h1>
            <ol class="breadcrumb animate a_02">
                <li class="breadcrumb-item">
                    <a href="/">Trang chủ</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Thông tin cổ phiếu </li>
            </ol>
        </div>
    </div>


    <section id="service-details" class="service-details section">
        <div class="container" id="app">





            <div class="container mt-4">
                <div class="row ">
                    <!-- Cột 1: Thông tin cổ phiếu -->
                    <div class="col-md-6">
                        <div class="info-box shadow p-4 mb-4 ">
                            <h4 class="section-title">THÔNG TIN CỔ PHIẾU</h4>
                            <p><strong>Mã cổ phiếu:</strong> @(_Info.Symbol ?? "")</p>
                            <p><strong>Tên cổ phiếu:</strong> @(_Info.Name ?? "")</p>
                            <p><strong>Tổ chức phát hành:</strong> @(_Info.Issue ?? "")</p>
                            <p><strong>Giá mua:</strong> @((_Info.Price / 1000).ToNumberStringN31())</p>
                            <p><strong>Tỷ suất hiện tại:</strong> {{ stocks.Heso_Text }}</p>


                        </div>

                        <div class="info-box shadow p-4 mb-4">
                            <h4 class="section-title">PHÂN TÍCH KỸ THUẬT</h4>
                            <p><strong>Giá hiện tại: </strong> {{ stocks.CurrentPrice }}</p>
                            <p><strong>Thay đổi giá 20 ngày:</strong> @(stockAnalysis.Change20Days.ToString("##0.##") ?? "")%</p>
                            <p><strong>RSI:</strong> @(stockAnalysis.RSI.ToString("##0.##") + " -> " + stockAnalysis.RSISignal)</p>
                            <p><strong>MACD:</strong> @(stockAnalysis.MACDCrossSignal)</p>
                            <p><strong>Bollinger Bands:</strong> @(stockAnalysis.BollingerSignal)</p>
                            <p><strong>Biến động giá:</strong> @(stockAnalysis.Volatility.ToString("##0.##"))%</p>
                            <p><strong>Thay đổi khối lượng 30 phiên:</strong> @((stockAnalysis.VolumeChange * 100).ToString("##0.##")) %</p>

                        </div>


                        @if (stockAnalysis != null && stockAnalysis.Observations != null)
                        {
                            <div class="info-box shadow p-4 mb-4">
                                <h4 class="section-title">AI NHẬN ĐỊNH</h4>
                                @foreach (var obs in stockAnalysis.Observations)
                                {
                                    <div class="row mb-2">
                                        <p>@obs</p>
                                    </div>
                                }
                            </div>
                        }

                    </div>

                    <!-- Cột 2: Phân tích kỹ thuật -->
                    <div class="col-md-6">
                        <div class="info-box shadow p-4 mb-4">
                            <h4 class="section-title">BIỂU ĐỒ KỸ THUẬT</h4>
                            <iframe src="@_url"
                                    width="100%"
                                    height="600"
                                    frameborder="0"
                                    style="border:0; min-height:400px;"
                                    allowfullscreen>
                            </iframe>
                        </div>
                    </div>
                </div>
            </div>





            <!-- HÀNG 3: Dữ liệu báo cáo -->
            @*  <div class="row">
            <div class="col-12 mb-3">
                <div class="tinlienquan d-flex justify-content-between align-items-center" >
                    <h3 class="fw-bold text-uppercase">Báo cáo FinArt của cổ phiếu @matp</h3>
                </div>
                <div id="data_report">
                    @Html.Partial("DataReportPages_BySymbol")
                </div>
            </div>
        </div> *@

        </div>
    </section>



    <input type="hidden" id="txtRecordOnPage" value="@ConfigInfo.RecordOnPage" />
    <script>
         $(document).ready(function() {
                 document.querySelector('.symbol-edit').readOnly = true;
            page("1")
        });
                             document.querySelector('.symbol-edit').readOnly = true;
        function page(index) {

            try {
                var recordOnPage = $('#txtRecordOnPage').val();
                var start = 1;
                var end = recordOnPage;

                 if (index === 'next') {
                   let pageht = $('li.active span.page-link').attr('id');
                   index = (parseInt(pageht) || 0) + 1;
                } else if (index === 'prew') {
                   let pageht = $('li.active span.page-link').attr('id');
                   index = (parseInt(pageht) || 0) - 1;
                }

                if (index > 1) {
                    end = index * recordOnPage;
                    start = end - recordOnPage + 1;
                }
                var request = {
                     CategoryType: '6',
                     Symbol : '@matp.ToUpper()',
                    currentPage: index,
                    start: start,
                    end: end
                };
                axios.post("/Home/SearchReport_Art_BySymbol", request).then(function (response) {
                    $('#data_report').html(response.data);
                }).catch(error => {
                     console.log(error);
                });
            } catch (e) {
                console.log(e);
            }
        }
    </script>





    <script src="~/assets/js/vue.global.js"></script>

    <script>
        const { createApp, ref, onMounted } = Vue

        createApp({
          setup() {
            const stocks = ref({})

            function sendPost() {

                axios.get('/tt-co-phieu/'+'@matp')
                .then(function (response) {
                  console.log('Gửi thành công:', response.data)
                  stocks.value = response.data
                })
                .catch(function (error) {
                  console.error('Lỗi khi gọi API:', error)
                })
            }
           onMounted(() => {
                sendPost() // gọi lần đầu
                setInterval(sendPost, 5000) // gọi lại mỗi 60 giây
           })
            return { stocks }
          }
        }).mount('#app')
    </script>
}